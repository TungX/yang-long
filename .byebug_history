continue
params[:user]
params
continue
current_user
continue
@current_user
continue
scope
continue
current_user
scope
continue
current_user
continue
current_user
:current_user,
scope
continue
next
params
continue
 object.carts.where(user: scope)
continue
 object.carts.where(user: scope)
continue
 object.carts.where(user: scope)
object
continue
cart.errors
cart.save
cart = Cart.new(cart_params)
params
continue
scope
continue
scope.:current_user
scope
continue
scope[:current_user∆∞
scope.current_user
scope
current_user
V
continue
scope
scope.current_user
continue
@scope
scope
current_user
V
continue
scope
current_user
continue
current_user
continue
current_user
continue
current_user
continue
current_user
continue
scope
current_user
continue
current_user
continue
@scope
current_user
scope
continue
@current_user
current_user
continue
current_user
continue
current_user
continue
scope
current_user
continue
current_user
continue
scope
@current_user
current_user
continue
current_user
continue
current_user
continue
@current_user
scope
continue
current_user.id
current_user
continue
current_user
continue
current_user
continue
scope
current_user
@current_user
continue
current_user
continue
current_user
continue
request
User.find_by(auth_token: request.headers['Authorization'])
continue
scope
serialization_options
@current_user
continue
params[:all]
params
continue
@current_user
Cart.all
Cart.where(user: @current_user)
continue
(Order.order(ms: :desc).first.ms + 1)
Order.order(ms: :desc).first.ms + 1
(Order.order(ms: :desc).first.ms +1)
Order.order(ms: :desc).first.ms
ms = Order.order(ms: :desc).empty? ? 1 : 2
ms = Order.order(ms: :desc).empty? ? 1 : (Order.order(ms: :desc).first.ms +1)
continue
order_params
order_params["a"]=1
order_params["street"]
order_params
order = Order.new(phone:"21211")
order = Order.new(phone:"21211",order_params)
order = Order.new(order_params,phone: "23232")
    params.require(:order).permit(:id, :name, :street, :town, :district, :product_id, :number, :size, :phone)
    params.require(:order).permit(:id, :name, :street, :town, :district, :product_id, :number, :size, :phone.to_s)
    params.require(:order).permit(:id, :name, :street, :town, :district, :product_id, :number, :size, phone: :phone.to_s)
params.require(:order).permit(:id, :name, :street, :town, :district, :product_id, :number, :size)
order_params
order_params["phone"] = "121"
order_params['phone'] = "121"
order_params[:phone] = "121"
order_params
order = Order.new(order_params,phone: params[:order][:phone].to_s, ms: ms)
order_params.phone = "12321321"
order_params
params[:order]
continue
params[:order][:phone].to_s
params[:order][:phone]
params[:order]
ms
 order = Order.new(order_params,phone: params[:order][:phone].to_s, ms: ms)
continue
Cart.where(user: object.user)
@current_user
Cart.all
Cart.where(user: @current_user)
cart
continue
Cart.where(user: @current_user)
cart
price += cart.product.sale? ? (cart.number* cart.sale) : (cart.number * cart.product.price)
price
continue
price
next
continue
CartSerializer.new(e)
continue
cart = CartSerializer.new(cart)
continue
cart = CartSerializer.new(cart)
cart = CartSerializer.create(cart)
continue
CartSerializer
cart = CartSerializer.new(cart)
continue
@current_user
continue
User.find_by(auth_token: request.headers['Authorization'])
@current_user
current_user
params
continue
products = Category.find_by(link: params[:category_id]).category_nds.map{ |cate_nd| cate_nd.products  }.class
User.all.class
User.all
products = Category.find_by(link: params[:category_id]).category_nds.map{ |cate_nd| cate_nd.products  }
continue
params[:price]
continue
products = products.price_in_0_100
roducts = products.price_in_100_200
params[:price]
continue
page % Settings.perpage
page
continue
2.class
Settings.perpage.to_i.class
Settings.perpage.class
categories = CategoryNd.all.page(params[:page]).per_page(Settings.perpgae.to_i)
categories = CategoryNd.all.page(params[:page]).per_page(Settings.perpgae)
Settings.perpage
categories = CategoryNd.all.page(params[:page]).per_page(24)
categories = CategoryNd.all.page(params[:page]).per_page(Settings.perpgae)
Settings.perpage
Settings
continue
categories = CategoryNd.all.page(params[:page]).per_page(Settings.perpgae)
continue
Settings.perpgae
Settings
categories = CategoryNd.all.page(params[:page]).per_page(:Settings.perpgae)
categories = CategoryNd.all.page(params[:page]).per_page(24)
categories = CategoryNd.all.page(params[:page]).per_page(Settings.perpgae)
continue
Settings
Settings.perpgae
continue
products = CategoryNd.find_by(link: params[:category_nd_id]).products.page(params[:page]).per_page(10)
page(params[:page])
continue
params
continue
params
continue
params[:session][:password]
user_password = params[:session][:password]
params[:sessions][:password]
params[:sessions][:email]
params[:sessions]
user_password[:sessions]
params[
user_password
continue
params[:email]
params[:session]
params[:session][:password]
user_password = params[:session][:password]
params[:sessions]
params
user_password
